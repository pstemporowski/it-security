
Zx = 551735025
start = 1664653896


def lfsr(start, Zx):
  reg = start
  Zx = Zx >> 8
  count = 0
  while reg != Zx:
    
    bit = ((reg & 0x0001) ^
        ((reg & 0x0002) >> 1) ^
       ((reg & 0x0004) >> 2) ^
       ((reg & 0x0008) >> 3) ^
       ((reg & 0x0080) >> 7) ^
       ((reg & 0x0200) >> 9) ^
       ((reg & 0x0400) >> 10) ^
       ((reg & 0x2000) >> 13) ^
       ((reg & 0x4000) >> 14) ^
       ((reg & 0x20000) >> 17) ^
       ((reg & 0x80000) >> 19) ^
       ((reg & 0x100000) >> 20) ^
       ((reg & 0x400000) >> 22) ^
       ((reg & 0x800000) >> 23) ^
       ((reg & 0x1000000) >> 24))
    reg = (reg >> 1) | (bit << 23)
    
    if(reg == start):
        print("Not Found")
        print(count)
        exit();
    count += 1

  return count



iterations = lfsr(start, Zx)
print(iterations)

"""
    firstVal = True
    for i in range(len(polynomial)):
      if polynomial[i] == 1:
        if(firstVal):
            bit = reg & (pow(2,i)) >> i
        else:
            bit = bit ^ (reg & (pow(2,i)) >> i)
"""

"""
polynomial = [1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 1, 1, 0, 1, 1]
revPol = polynomial[::-1]
"""